{"version":3,"sources":["functions/parser.js","components/Spinner/Spinner.jsx","components/AppRouter/AppRouter.jsx","functions/localStore.js","api/index.js","components/Header/Header.jsx","App.js","index.js","context/MatchListContext.js"],"names":["parse","str","parsedResult","teams","regexpTeams","RegExp","matchAll","result","pairs","team","leftTeam","rightTeam","push","parseTeams","dates","regexpDates","Array","from","map","date","moment","utc","parseDates","leagues","regexpLeagues","league","parseLeagues","i","length","dateStr","format","sort","a","b","unix","SpinnerContainer","styled","div","Spinner","size","Main","React","lazy","Json","AppRouter","Suspense","fallback","path","exact","component","to","LOCAL_S_TIMESTAMP","LOCAL_S_DATA","API","Request","method","Header","justify","theme","mode","disabledOverflow","Item","App","useState","parsed","setParsed","useEffect","parsedData","timestamp","localStorage","getItem","past","now","duration","diff","asHours","JSON","el","getFromLocalStorage","fetch","then","res","json","text","data","setItem","stringify","Content","style","minHeight","Provider","value","Footer","ReactDOM","render","StrictMode","basename","document","getElementById","MatchListContext","createContext"],"mappings":"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","file":"static/js/main.34f87b93.chunk.js","sourcesContent":["import moment from \"moment\";\r\n\r\nfunction parseDates(str) {\r\n    //date format: \"October 12, 2021 - 19:45\"\r\n    const regexpDates = new RegExp(\r\n        \"([A-Za-z]{3,}) ([0-9]{1,2}), ([0-9]{4}) - ([0-9:0-9]{4,5})\",\r\n        \"g\"\r\n    );\r\n    const dates = Array.from(str.matchAll(regexpDates));\r\n    const result = dates.map((date) =>\r\n        moment.utc(date[0], \"MMMM DD YYYY HH:mm\")\r\n    );\r\n\r\n    return result;\r\n}\r\n\r\nfunction parseLeagues(str) {\r\n    const regexpLeagues = new RegExp(\r\n        '<a href=\"/rainbowsix/.*\" title=\".*\">(.*)</a>&#160;',\r\n        \"g\"\r\n    );\r\n    const leagues = Array.from(str.matchAll(regexpLeagues));\r\n    const result = leagues.map((league) => league[1]);\r\n\r\n    return result;\r\n}\r\n\r\nfunction parseTeams(str) {\r\n    //takes the title from tag like <span data-highlightingclass=\\\"Mkers\\\">\r\n    const regexpTeams = new RegExp('data-highlightingclass=\"([^\"]+)', \"g\");\r\n    const teams = str.matchAll(regexpTeams);\r\n\r\n    let result = [];\r\n    let pairs = {};\r\n\r\n    for (let team of teams) {\r\n        if (pairs.leftTeam) {\r\n            pairs.rightTeam = team[1];\r\n            result.push(pairs);\r\n            pairs = {};\r\n        } else {\r\n            pairs.leftTeam = team[1];\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction parse(str) {\r\n    const parsedResult = [];\r\n\r\n    const teams = parseTeams(str);\r\n    const dates = parseDates(str);\r\n    const leagues = parseLeagues(str);\r\n\r\n    for (let i = 0; i < teams.length; i++) {\r\n        parsedResult[i] = {\r\n            ...teams[i],\r\n            date: dates[i],\r\n            dateStr: dates[i].format(\"MMM DD YYYY HH:mm\"),\r\n            league: leagues[i],\r\n        };\r\n    }\r\n\r\n    parsedResult.sort((a, b) => {\r\n        return a.date.unix() - b.date.unix();\r\n    });\r\n\r\n    return parsedResult;\r\n}\r\n\r\nexport default parse;\r\n","import { Spin } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SpinnerContainer = styled.div`\r\n    display: flex;\r\n    height: 80vh;\r\n    width: 100vw;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <SpinnerContainer>\r\n            <Spin size=\"large\" />\r\n        </SpinnerContainer>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nconst Main = React.lazy(() => import(\"../../pages/Main\"));\r\nconst Json = React.lazy(() => import(\"../../pages/Json\"));\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <React.Suspense fallback={<Spinner />}>\r\n            <Switch>\r\n                <Route path={\"/\"} exact={true} component={Main} />\r\n                <Route path={\"/json\"} component={Json} />\r\n                <Redirect to={\"/\"} />\r\n            </Switch>\r\n        </React.Suspense>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import moment from \"moment\";\r\n\r\nconst LOCAL_S_TIMESTAMP = \"timestamp\";\r\nconst LOCAL_S_DATA = \"parsedData\";\r\n\r\nexport function getFromLocalStorage() {\r\n    const timestamp = localStorage.getItem(LOCAL_S_TIMESTAMP);\r\n\r\n    if (timestamp) {\r\n        const past = moment(timestamp);\r\n        const now = moment();\r\n        const hoursDiff = moment.duration(now.diff(past)).asHours();\r\n\r\n        if (hoursDiff < 1) {\r\n            let parsedData = localStorage.getItem(LOCAL_S_DATA);\r\n            if (parsedData) {\r\n                parsedData = JSON.parse(parsedData).map((el) => {\r\n                    return { ...el, date: moment.utc(el.date) };\r\n                });\r\n                return parsedData;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function saveInLocalStorage(data){\r\n    localStorage.setItem(LOCAL_S_DATA, JSON.stringify(data));\r\n    localStorage.setItem(LOCAL_S_TIMESTAMP, moment().format());\r\n}","const URL =\r\n    \"https://liquipedia.net/rainbowsix/api.php?action=parse&origin=*&format=json&page=Liquipedia:Upcoming_and_ongoing_matches\";\r\n\r\nconst API = new Request(URL, {\r\n    method: \"GET\",\r\n});\r\n\r\nexport default API;\r\n","import React from \"react\";\r\nimport { Layout, Row, Menu } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Layout.Header>\r\n            <Row justify=\"start\">\r\n                <Menu\r\n                    theme=\"dark\"\r\n                    mode=\"horizontal\"\r\n                    disabledOverflow={true}\r\n                >\r\n                    <Menu.Item key={1}>\r\n                        <NavLink to=\"/\">Matches</NavLink>\r\n                    </Menu.Item>\r\n                    \r\n                    <Menu.Item key={2}>\r\n                        <NavLink to=\"/json\">Get Json</NavLink>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Row>\r\n        </Layout.Header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Layout } from \"antd\";\nimport parse from \"./functions/parser\";\nimport AppRouter from \"./components/AppRouter/AppRouter\";\nimport MatchesListContext from \"./context/MatchListContext\";\nimport { getFromLocalStorage, saveInLocalStorage } from \"./functions/localStore\";\nimport API from \"./api\";\nimport Header from \"./components/Header/Header\";\n\nfunction App() {\n    const [parsed, setParsed] = useState([]);\n\n    useEffect(() => {\n\n        const parsedData = getFromLocalStorage();\n        if(parsedData){\n            setParsed(parsedData);\n            return;\n        }\n\n        fetch(API)\n            .then((res) => res.json())\n            .then((res) => res.parse.text[\"*\"])\n            .then((res) => {\n                const parsedData = parse(res);\n                setParsed(parsedData);\n                saveInLocalStorage(parsedData);\n            });\n    }, []);\n\n    return (\n        <Layout>\n            <Header />\n            <Layout.Content style={{minHeight: \"80vh\"}}>\n                <MatchesListContext.Provider value={parsed}>\n                    <AppRouter />\n                </MatchesListContext.Provider>\n            </Layout.Content>\n            <Layout.Footer />\n        </Layout>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter basename=\"/r6s-matches-parser\">\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","import { createContext } from \"react\";\r\n\r\nconst MatchListContext = createContext([]);\r\n\r\nexport default MatchListContext;\r\n"],"sourceRoot":""}