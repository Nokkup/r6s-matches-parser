{"version":3,"sources":["components/MatchCard/MatchCardStyles.jsx","components/MatchCard/MatchCard.jsx","functions/filter.js","functions/unique.js","components/Filter/Filter.jsx","components/Filter/CollapseFilter.jsx","pages/Main.jsx"],"names":["League","styled","div","MatchDate","Versus","TeamCard","props","side","Container","MatchCard","leftTeam","rightTeam","league","dateStr","filterMatch","filterOptions","date","result","byTeam","length","includes","byLeague","onlyOngoingMatches","isSameOrBefore","moment","onlyUpcomingMatches","isSameOrAfter","unique","arr","Array","from","Set","Filter","leagues","teams","setFilterOptions","Form","useForm","form","leagueOptions","useMemo","sort","map","Option","teamOptions","team","layout","fields","name","value","Item","label","mode","allowClear","style","width","placeholder","onChange","e","changeTeams","changeLeagues","Group","buttonStyle","target","changeMatchDate","htmlType","onClick","resetFields","CollapseFilter","breakpoint","Panel","header","Main","matchList","useContext","MatchListContext","md","Grid","useBreakpoint","useState","el","flat","justify","align","span","offset","pagination","pageSize","showSizeChanger","responsive","dataSource","filter","renderItem","item"],"mappings":"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","file":"static/js/7.92b692fe.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const League = styled.div`\r\n    display: flex;\r\n    width: 150px;\r\n    height: 80px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    overflow: hidden;\r\n    background: rgb(195, 224, 229);\r\n\r\n    @media screen and (max-width: 768px) {\r\n        width: 350px;\r\n        height: 40px;\r\n    }\r\n`;\r\n\r\nexport const MatchDate = styled.div`\r\n    display: flex;\r\n    width: 150px;\r\n    height: 80px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    background: rgb(195, 224, 229);\r\n\r\n    @media screen and (max-width: 768px) {\r\n        width: 350px;\r\n        height: 40px;\r\n    }\r\n`;\r\n\r\nexport const Versus = styled.div`\r\n    position: absolute;\r\n    width: 30px;\r\n    height: 200px;\r\n    transform: rotate(45deg);\r\n    border: 1px solid white;\r\n    background: rgb(55, 74, 103);\r\n\r\n    &:before {\r\n        position: absolute;\r\n        top: 45%;\r\n        left: 65%;\r\n        transform: rotate(-45deg) translate(-50%, -50%);\r\n        content: \"VS\";\r\n        font-size: 0.9rem;\r\n        color: white;\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n        transform: rotate(90deg);\r\n        &:before {\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: rotate(-90deg) translate(50%, -50%);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TeamCard = styled.div`\r\n    display: flex;\r\n    width: 300px;\r\n    height: 100px;\r\n    padding: 5px;\r\n    align-items: ${props => props.side === \"left\" ? \"flex-start\" : \"flex-end\"};\r\n    text-align: ${props => props.side === \"left\" ? \"left\" : \"right\"};\r\n    justify-content: center;\r\n    font-size: 1.1rem;\r\n    color: rgb(255, 255, 255);\r\n    background: rgba(14, 17, 22, 0.9);\r\n\r\n    @media screen and (max-width: 768px) {\r\n        width: 100vw;\r\n        height: 70px;\r\n    }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    position: relative;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    overflow: hidden;\r\n\r\n    @media screen and (max-width: 768px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n    Container,\r\n    MatchDate,\r\n    TeamCard,\r\n    Versus,\r\n    League,\r\n} from \"./MatchCardStyles\";\r\n\r\nconst MatchCard = ({ leftTeam, rightTeam, league, dateStr }) => {\r\n    return (\r\n        <Container>\r\n            <MatchDate>{dateStr}</MatchDate>\r\n            <TeamCard side=\"left\">{leftTeam}</TeamCard>\r\n            <Versus />\r\n            <TeamCard side=\"right\">{rightTeam}</TeamCard>\r\n            <League>{league}</League>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default MatchCard;\r\n","import moment from \"moment\";\r\n\r\nfunction filterMatch({ filterOptions, leftTeam, rightTeam, league, date }) {\r\n    let result = true;\r\n    if (filterOptions.byTeam.length) {\r\n        result =\r\n            filterOptions.byTeam.includes(leftTeam) ||\r\n            filterOptions.byTeam.includes(rightTeam)\r\n                ? true\r\n                : false;\r\n    }\r\n\r\n    if (filterOptions.byLeague.length) {\r\n        result = filterOptions.byLeague.includes(league) ? result : false;\r\n    }\r\n\r\n    if (filterOptions.onlyOngoingMatches) {\r\n        result = date.isSameOrBefore(moment()) ? result : false;\r\n    }\r\n\r\n    if (filterOptions.onlyUpcomingMatches) {\r\n        result = date.isSameOrAfter(moment()) ? result : false;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport default filterMatch;\r\n","function unique(arr) {\r\n    return Array.from(new Set(arr));\r\n}\r\n\r\nexport default unique;\r\n","import React, {useMemo} from \"react\";\r\nimport { Form, Select, Radio, Button } from \"antd\";\r\n\r\nconst Filter = ({ leagues, teams, setFilterOptions, filterOptions }) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const leagueOptions = useMemo(() => \r\n        leagues\r\n            .sort()\r\n            .map((league) => <Select.Option key={league}>{league}</Select.Option>), [leagues]);\r\n\r\n    const teamOptions = useMemo(() => \r\n        teams\r\n            .sort()\r\n            .map((team) => <Select.Option key={team}>{team}</Select.Option>), [teams]);\r\n\r\n    const onReset = () => {\r\n        form.resetFields();\r\n        setFilterOptions({\r\n            byTeam: [],\r\n            byLeague: [],\r\n            onlyOngoingMatches: false,\r\n            onlyUpcomingMatches: false,\r\n        });\r\n    };\r\n\r\n    const changeTeams = (e) => {\r\n        setFilterOptions({ ...filterOptions, byTeam: [...e] });\r\n    };\r\n\r\n    const changeLeagues = (e) => {\r\n        setFilterOptions({ ...filterOptions, byLeague: [...e] });\r\n    };\r\n\r\n    const changeMatchDate = (e) => {\r\n        const onlyOngoingMatches = e.target.value === \"ongoing\" ? true : false;\r\n        const onlyUpcomingMatches = e.target.value === \"upcoming\" ? true : false;\r\n\r\n        setFilterOptions({\r\n            ...filterOptions,\r\n            onlyOngoingMatches,\r\n            onlyUpcomingMatches,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            fields={[\r\n                {\r\n                    name: [\"select-team\"],\r\n                    value: filterOptions.byTeam,\r\n                },\r\n                {\r\n                    name: [\"select-league\"],\r\n                    value: filterOptions.byLeague,\r\n                },\r\n                {\r\n                    name: [\"radio-match-date\"],\r\n                    value:\r\n                        (filterOptions.onlyOngoingMatches && \"ongoing\") ||\r\n                        (filterOptions.onlyUpcomingMatches && \"upcoming\"),\r\n                },\r\n            ]}\r\n        >\r\n            <Form.Item name=\"select-team\" label=\"Select team(s)\">\r\n                <Select\r\n                    mode=\"multiple\"\r\n                    allowClear\r\n                    style={{ width: \"100%\" }}\r\n                    placeholder=\"Select teams\"\r\n                    onChange={(e) => changeTeams(e)}\r\n                >\r\n                    {teamOptions}\r\n                </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"select-league\" label=\"Select league\">\r\n                <Select\r\n                    mode=\"multiple\"\r\n                    allowClear\r\n                    style={{ width: \"100%\" }}\r\n                    placeholder=\"Select league\"\r\n                    onChange={(e) => changeLeagues(e)}\r\n                >\r\n                    {leagueOptions}\r\n                </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"radio-match-date\" label=\"Match Date\">\r\n                <Radio.Group\r\n                    buttonStyle=\"solid\"\r\n                    onChange={(e) => changeMatchDate(e)}\r\n                >\r\n                    <Radio value=\"ongoing\">Ongoing matches</Radio>\r\n                    <Radio value=\"upcoming\">Upcoming matches</Radio>\r\n                </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button htmlType=\"button\" onClick={onReset}>\r\n                    Reset\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { Collapse } from 'antd';\r\nimport Filter from \"./Filter\";\r\n\r\n\r\nconst CollapseFilter = ({ breakpoint, leagues, teams, setFilterOptions, filterOptions }) => {\r\n    return (\r\n        breakpoint\r\n        ?\r\n        <Filter\r\n            leagues={leagues}\r\n            teams={teams}\r\n            setFilterOptions={setFilterOptions}\r\n            filterOptions={filterOptions}\r\n        />\r\n        :\r\n        <Collapse>\r\n            <Collapse.Panel header=\"Filter\">\r\n                <Filter\r\n                    leagues={leagues}\r\n                    teams={teams}\r\n                    setFilterOptions={setFilterOptions}\r\n                    filterOptions={filterOptions}\r\n                />\r\n            </Collapse.Panel>\r\n        </Collapse>\r\n    );\r\n}\r\n\r\nexport default CollapseFilter;\r\n","import React, { useContext, useState, useMemo } from \"react\";\r\nimport { Col, List, Row, Grid } from \"antd\";\r\nimport MatchCard from \"../components/MatchCard/MatchCard\";\r\nimport MatchListContext from \"../context/MatchListContext\";\r\nimport filterMatch from \"../functions/filter\";\r\nimport unique from \"../functions/unique\";\r\nimport CollapseFilter from \"../components/Filter/CollapseFilter\";\r\n\r\nconst Main = () => {\r\n    const matchList = useContext(MatchListContext);\r\n    const { md } = Grid.useBreakpoint();\r\n    const [filterOptions, setFilterOptions] = useState({\r\n        byTeam: [],\r\n        byLeague: [],\r\n        onlyOngoingMatches: false,\r\n        onlyUpcomingMatches: false,\r\n    });\r\n\r\n    const teams = useMemo(\r\n        () => unique(matchList.map((el) => [el.leftTeam, el.rightTeam]).flat()),\r\n        [matchList]\r\n    );\r\n\r\n    const leagues = useMemo(\r\n        () => unique(matchList.map((el) => el.league)),\r\n        [matchList]\r\n    );\r\n\r\n    return (\r\n        <Row justify=\"center\" align=\"middle\">\r\n            <Col span={md ? 6 : 20} offset={md ? 1 : 0}>\r\n                <CollapseFilter\r\n                    breakpoint={md}\r\n                    leagues={leagues}\r\n                    teams={teams}\r\n                    setFilterOptions={setFilterOptions}\r\n                    filterOptions={filterOptions}\r\n                />\r\n            </Col>\r\n\r\n            <Col span={md ? 12 : 16} offset={md ? 2 : 0}>\r\n                <List\r\n                    header={<h2>Upcoming and ongoing matches</h2>}\r\n                    pagination={{\r\n                        pageSize: 4,\r\n                        showSizeChanger: false,\r\n                        responsive: true,\r\n                    }}\r\n                    dataSource={matchList.filter((el) =>\r\n                        filterMatch({ filterOptions, ...el })\r\n                    )}\r\n                    renderItem={(item) => (\r\n                        <List.Item>\r\n                            <MatchCard {...item}></MatchCard>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n"],"sourceRoot":""}